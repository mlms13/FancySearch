// Generated by Haxe 3.3.0 (git build development @ c262f4e)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	fancy_Search.createFromSelector(".fancy-container input",{ minLength : 0, suggestionOptions : { suggestions : ["Apple","Banana","Barley","Black Bean","Carrot","Corn","Cucumber","Dates","Eggplant","Fava Beans","Kale","Lettuce","Lime","Lima Bean","Mango","Melon","Orange","Peach","Pear","Pepper","Potato","Radish","Spinach","Tomato","Turnip","Zucchini"], limit : 6, showSearchLiteralItem : true}});
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var dots_Dom = function() { };
dots_Dom.__name__ = true;
dots_Dom.insertAtIndex = function(el,child,index) {
	el.insertBefore(child,el.children[index]);
	return el;
};
dots_Dom.appendChild = function(el,child) {
	el.appendChild(child);
	return el;
};
dots_Dom.appendChildren = function(el,children) {
	return thx_Arrays.reduce(children,dots_Dom.appendChild,el);
};
dots_Dom.append = function(el,child,children) {
	if(child != null) {
		dots_Dom.appendChild(el,child);
	}
	if(children != null && children.length > 0) {
		dots_Dom.appendChildren(el,children);
	}
	return el;
};
dots_Dom.empty = function(el) {
	while(el.firstChild != null) el.removeChild(el.firstChild);
	return el;
};
dots_Dom.flattenSiblingsAndChildren = function(node) {
	while(node != null) {
		if(node.nodeType == 1) {
			dots_Dom.flattenSiblingsAndChildren(node.childNodes[0]);
		} else if(node.nodeType == 3) {
			while(null != node.nextSibling && node.nextSibling.nodeType == 3) {
				var a = node.textContent;
				var b = node.nextSibling.textContent;
				node.parentNode.removeChild(node.nextSibling);
				var t = window.document.createTextNode(a + b);
				node.parentNode.replaceChild(t,node);
				node = t;
			}
		}
		node = node.nextSibling;
	}
};
dots_Dom.flattenTextNodes = function(dom) {
	dots_Dom.flattenSiblingsAndChildren(dom.childNodes[0]);
};
dots_Dom.traverseTextNodes = function(dom,f) {
	var collect = [];
	var perform = null;
	perform = function(dom1) {
		if(dom1.nodeType == 3) {
			collect.push(dom1);
		} else if(dom1.nodeType == 1) {
			var _g = 0;
			var _g1 = dom1.childNodes;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				perform(child);
			}
		}
	};
	perform(dom);
	var _g2 = 0;
	while(_g2 < collect.length) {
		var n = collect[_g2];
		++_g2;
		f(n);
	}
};
var fancy_Search = function(el,options) {
	if(options == null) {
		options = { };
	}
	this.input = el;
	this.settings = fancy_search_FancySearchSettings.createFromOptions(el,$bind(this,this.onClearButtonClick),options);
	var doc = null;
	if(null == doc) {
		doc = window.document;
	}
	var el1 = doc.createElement("button");
	var _g1 = 0;
	var _g2 = [];
	while(_g1 < _g2.length) {
		var o = _g2[_g1];
		++_g1;
		el1.setAttribute(o.name,o.value);
	}
	var _g11 = new haxe_ds_StringMap();
	var value = this.settings.classes.clearButton;
	if(__map_reserved["class"] != null) {
		_g11.setReserved("class",value);
	} else {
		_g11.h["class"] = value;
	}
	var attrs = _g11;
	if(null != attrs) {
		var tmp = attrs.keys();
		while(tmp.hasNext()) {
			var attr = tmp.next();
			el1.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
		}
	}
	var children = null;
	if(null != children) {
		var _g21 = 0;
		while(_g21 < children.length) {
			var child = children[_g21];
			++_g21;
			el1.appendChild(child);
		}
	}
	var textContent = "Ã—";
	if(null != textContent) {
		el1.appendChild(doc.createTextNode(textContent));
	}
	this.clearBtn = el1;
	this.clearBtn.addEventListener("mousedown",this.settings.onClearButtonClick);
	if(this.settings.clearBtn) {
		dots_Dom.append(this.settings.container,this.clearBtn);
	}
	this.list = new fancy_search_Suggestions(this.settings.container,el,this.settings.classes,options.suggestionOptions);
	this.input.classList.add(this.settings.classes.input);
	if(this.input.value.length < 1) {
		this.input.classList.add(this.settings.classes.inputEmpty);
	}
	this.input.addEventListener("focus",$bind(this,this.onSearchFocus));
	this.input.addEventListener("blur",$bind(this,this.onSearchBlur));
	this.input.addEventListener("input",$bind(this,this.onSearchInput));
	this.input.addEventListener("keydown",$bind(this,this.onSearchKeydown));
};
fancy_Search.__name__ = true;
fancy_Search.createFromSelector = function(selector,options) {
	return new fancy_Search(window.document.querySelector(selector),options);
};
fancy_Search.prototype = {
	onSearchFocus: function(e) {
		this.filterUsingInputValue();
	}
	,onSearchBlur: function(e) {
		this.checkEmptyStatus();
		this.list.close();
	}
	,filterUsingInputValue: function() {
		this.list.filter(this.input.value);
		if(this.input.value.length >= this.settings.minLength) {
			this.list.open();
		} else {
			this.list.close();
		}
	}
	,checkEmptyStatus: function() {
		if(this.input.value.length > 0) {
			this.input.classList.remove(this.settings.classes.inputEmpty);
		} else {
			this.input.classList.add(this.settings.classes.inputEmpty);
		}
	}
	,onSearchInput: function(e) {
		var _gthis = this;
		this.checkEmptyStatus();
		this.filterUsingInputValue();
		thx_Options.map(this.settings.populateSuggestions,function(fn) {
			_gthis.input.classList.add(_gthis.settings.classes.inputLoading);
			var value = _gthis.input.value;
			return thx_promise__$Promise_Promise_$Impl_$.always(thx_promise__$Promise_Promise_$Impl_$.success(fn(value),function(result) {
				if(value == _gthis.input.value) {
					_gthis.list.setSuggestions(result);
				}
			}),function() {
				_gthis.input.classList.remove(_gthis.settings.classes.inputLoading);
			});
		});
	}
	,onSearchKeydown: function(e) {
		e.stopPropagation();
		var code = e.which != null?e.which:e.keyCode;
		if(thx_Arrays.contains(this.settings.keys.closeMenu,code)) {
			this.list.close();
		} else if(thx_Arrays.contains(this.settings.keys.selectionUp,code) && this.list.isOpen) {
			e.preventDefault();
			this.list.moveSelectionUp();
		} else if(thx_Arrays.contains(this.settings.keys.selectionDown,code) && this.list.isOpen) {
			e.preventDefault();
			this.list.moveSelectionDown();
		} else if(thx_Arrays.contains(this.settings.keys.selectionChoose,code) && !thx_Strings.isEmpty(this.list.selected)) {
			this.list.chooseSelectedItem();
		}
	}
	,onClearButtonClick: function(e) {
		e.preventDefault();
		this.input.value = "";
		this.filterUsingInputValue();
	}
	,__class__: fancy_Search
};
var fancy_search_FancySearchSettings = function(classes,clearBtn,container,keys,minLength,onClearButtonClick,populateSuggestions) {
	this.classes = classes;
	this.clearBtn = clearBtn;
	this.container = container;
	this.keys = keys;
	this.minLength = minLength;
	this.onClearButtonClick = onClearButtonClick;
	this.populateSuggestions = populateSuggestions;
};
fancy_search_FancySearchSettings.__name__ = true;
fancy_search_FancySearchSettings.classesFromOptions = function(opts) {
	if(opts == null) {
		opts = { };
	}
	return { input : opts.input != null?opts.input:"fs-search-input", inputEmpty : opts.inputEmpty != null?opts.inputEmpty:"fs-search-input-empty", inputLoading : opts.inputLoading != null?opts.inputLoading:"fs-search-input-loading", clearButton : opts.clearButton != null?opts.clearButton:"fs-clear-input-button", suggestionContainer : opts.suggestionContainer != null?opts.suggestionContainer:"fs-suggestion-container", suggestionsOpen : opts.suggestionsOpen != null?opts.suggestionsOpen:"fs-suggestion-container-open", suggestionsClosed : opts.suggestionsClosed != null?opts.suggestionsClosed:"fs-suggestion-container-closed", suggestionsEmpty : opts.suggestionsEmpty != null?opts.suggestionsEmpty:"fs-suggestion-container-empty", suggestionList : opts.suggestionList != null?opts.suggestionList:"fs-suggestion-list", suggestionItem : opts.suggestionItem != null?opts.suggestionItem:"fs-suggestion-item", suggestionItemSelected : opts.suggestionItemSelected != null?opts.suggestionItemSelected:"fs-suggestion-item-selected", suggestionHighlight : opts.suggestionHighlight != null?opts.suggestionHighlight:"fs-suggestion-highlight", suggestionHighlighted : opts.suggestionHighlighted != null?opts.suggestionHighlighted:"fs-suggestion-highlighted"};
};
fancy_search_FancySearchSettings.keyboardShortcutsFromOptions = function(opts) {
	if(opts == null) {
		opts = { };
	}
	return { closeMenu : opts.closeMenu != null?opts.closeMenu:[27], selectionUp : opts.selectionUp != null?opts.selectionUp:[38], selectionDown : opts.selectionDown != null?opts.selectionDown:[40,9], selectionChoose : opts.selectionChoose != null?opts.selectionChoose:[13]};
};
fancy_search_FancySearchSettings.createFromOptions = function(input,clrBtnClick,opts) {
	if(opts == null) {
		opts = { };
	}
	var tmp = fancy_search_FancySearchSettings.classesFromOptions(opts.classes);
	var tmp1 = opts.clearBtn != null?opts.clearBtn:true;
	var tmp2;
	if(opts.container != null) {
		tmp2 = opts.container;
	} else {
		var value = input.parentElement;
		tmp2 = thx_Options.getOrThrow(null == value?haxe_ds_Option.None:haxe_ds_Option.Some(value),{ fileName : "FancySearchSettings.hx", lineNumber : 90, className : "fancy.search.FancySearchSettings", methodName : "createFromOptions"});
	}
	var tmp3 = fancy_search_FancySearchSettings.keyboardShortcutsFromOptions(opts.keys);
	var tmp4 = opts.minLength != null?opts.minLength:1;
	var tmp5 = opts.onClearButtonClick != null?opts.onClearButtonClick:clrBtnClick;
	var value1 = opts.populateSuggestions;
	return new fancy_search_FancySearchSettings(tmp,tmp1,tmp2,tmp3,tmp4,tmp5,null == value1?haxe_ds_Option.None:haxe_ds_Option.Some(value1));
};
fancy_search_FancySearchSettings.prototype = {
	__class__: fancy_search_FancySearchSettings
};
var fancy_search_Suggestions = function(parent,input,classes,options) {
	this.classes = classes;
	this.searchInput = input;
	this.opts = this.initializeOptions(options);
	this.isOpen = false;
	this.filtered = new thx_StringOrderedMap();
	var doc = null;
	if(null == doc) {
		doc = window.document;
	}
	var el = doc.createElement("ul");
	var _g1 = 0;
	var _g2 = [];
	while(_g1 < _g2.length) {
		var o = _g2[_g1];
		++_g1;
		el.setAttribute(o.name,o.value);
	}
	var _g11 = new haxe_ds_StringMap();
	var value = classes.suggestionList;
	if(__map_reserved["class"] != null) {
		_g11.setReserved("class",value);
	} else {
		_g11.h["class"] = value;
	}
	var attrs = _g11;
	if(null != attrs) {
		var tmp = attrs.keys();
		while(tmp.hasNext()) {
			var attr = tmp.next();
			el.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
		}
	}
	var children = null;
	if(null != children) {
		var _g21 = 0;
		while(_g21 < children.length) {
			var child = children[_g21];
			++_g21;
			el.appendChild(child);
		}
	}
	var textContent = null;
	if(null != textContent) {
		el.appendChild(doc.createTextNode(textContent));
	}
	this.list = el;
	var doc1 = null;
	if(null == doc1) {
		doc1 = window.document;
	}
	var el1 = doc1.createElement("div");
	var _g22 = 0;
	var _g3 = [];
	while(_g22 < _g3.length) {
		var o1 = _g3[_g22];
		++_g22;
		el1.setAttribute(o1.name,o1.value);
	}
	var _g23 = new haxe_ds_StringMap();
	var value1 = [classes.suggestionContainer,classes.suggestionsClosed].join(" ");
	if(__map_reserved["class"] != null) {
		_g23.setReserved("class",value1);
	} else {
		_g23.h["class"] = value1;
	}
	var attrs1 = _g23;
	if(null != attrs1) {
		var tmp1 = attrs1.keys();
		while(tmp1.hasNext()) {
			var attr1 = tmp1.next();
			el1.setAttribute(attr1,__map_reserved[attr1] != null?attrs1.getReserved(attr1):attrs1.h[attr1]);
		}
	}
	var children1 = [this.list];
	if(null != children1) {
		var _g31 = 0;
		while(_g31 < children1.length) {
			var child1 = children1[_g31];
			++_g31;
			el1.appendChild(child1);
		}
	}
	var textContent1 = null;
	if(null != textContent1) {
		el1.appendChild(doc1.createTextNode(textContent1));
	}
	this.el = el1;
	dots_Dom.append(parent,this.el);
	this.setSuggestions(this.opts.suggestions);
};
fancy_search_Suggestions.__name__ = true;
fancy_search_Suggestions.defaultChooseSelection = function(toString,input,selection) {
	switch(selection[1]) {
	case 0:
		input.value = toString(selection[2]);
		break;
	case 1:
		input.value = input.value;
		break;
	}
	input.blur();
};
fancy_search_Suggestions.defaultFilterer = function(toString,search,sugg) {
	return toString(sugg).toLowerCase().indexOf(search) >= 0;
};
fancy_search_Suggestions.prototype = {
	initializeOptions: function(options) {
		var _gthis = this;
		var opts = { };
		opts.sortSuggestionsFn = options.sortSuggestionsFn;
		var _0 = options;
		var t;
		if(null == _0) {
			t = null;
		} else {
			var _1 = _0.limit;
			if(null == _1) {
				t = null;
			} else {
				t = _1;
			}
		}
		opts.limit = t != null?t:5;
		var _01 = options;
		var t1;
		if(null == _01) {
			t1 = null;
		} else {
			var _11 = _01.alwaysSelected;
			if(null == _11) {
				t1 = null;
			} else {
				t1 = _11;
			}
		}
		opts.alwaysSelected = t1 != null && t1;
		var _02 = options;
		var t2;
		if(null == _02) {
			t2 = null;
		} else {
			var _12 = _02.showSearchLiteralItem;
			if(null == _12) {
				t2 = null;
			} else {
				t2 = _12;
			}
		}
		opts.showSearchLiteralItem = t2 != null && t2;
		var _03 = options;
		var t3;
		if(null == _03) {
			t3 = null;
		} else {
			var _13 = _03.searchLiteralPosition;
			if(null == _13) {
				t3 = null;
			} else {
				t3 = _13;
			}
		}
		opts.searchLiteralPosition = t3 != null?t3:fancy_search_util_LiteralPosition.First;
		var _04 = options;
		var t4;
		if(null == _04) {
			t4 = null;
		} else {
			var _14 = _04.searchLiteralValue;
			if(null == _14) {
				t4 = null;
			} else {
				t4 = _14;
			}
		}
		opts.searchLiteralValue = t4 != null?t4:function(inpt) {
			return inpt.value;
		};
		var _05 = options;
		var t5;
		if(null == _05) {
			t5 = null;
		} else {
			var _15 = _05.searchLiteralPrefix;
			if(null == _15) {
				t5 = null;
			} else {
				t5 = _15;
			}
		}
		opts.searchLiteralPrefix = t5 != null?t5:"Search for: ";
		var _06 = options;
		var t6;
		if(null == _06) {
			t6 = null;
		} else {
			var _16 = _06.suggestions;
			if(null == _16) {
				t6 = null;
			} else {
				t6 = _16;
			}
		}
		opts.suggestions = t6 != null?t6:[];
		var _07 = options;
		var t7;
		if(null == _07) {
			t7 = null;
		} else {
			var _17 = _07.suggestionToString;
			if(null == _17) {
				t7 = null;
			} else {
				t7 = _17;
			}
		}
		opts.suggestionToString = t7 != null?t7:function(t8) {
			return Std.string(t8);
		};
		var _08 = options;
		var t9;
		if(null == _08) {
			t9 = null;
		} else {
			var _18 = _08.onChooseSelection;
			if(null == _18) {
				t9 = null;
			} else {
				t9 = _18;
			}
		}
		var tmp;
		if(t9 != null) {
			tmp = t9;
		} else {
			var a1 = opts.suggestionToString;
			tmp = function(a2,a3) {
				fancy_search_Suggestions.defaultChooseSelection(a1,a2,a3);
			};
		}
		opts.onChooseSelection = tmp;
		var _09 = options;
		var t10;
		if(null == _09) {
			t10 = null;
		} else {
			var _19 = _09.suggestionToElement;
			if(null == _19) {
				t10 = null;
			} else {
				t10 = _19;
			}
		}
		opts.suggestionToElement = t10 != null?t10:function(t11) {
			var doc = null;
			if(null == doc) {
				doc = window.document;
			}
			var el = doc.createElement("span");
			var _g1 = 0;
			var _g2 = [];
			while(_g1 < _g2.length) {
				var o = _g2[_g1];
				++_g1;
				el.setAttribute(o.name,o.value);
			}
			var _g11 = new haxe_ds_StringMap();
			var value = _gthis.classes.suggestionHighlight;
			if(__map_reserved["class"] != null) {
				_g11.setReserved("class",value);
			} else {
				_g11.h["class"] = value;
			}
			var attrs = _g11;
			if(null != attrs) {
				var tmp1 = attrs.keys();
				while(tmp1.hasNext()) {
					var attr = tmp1.next();
					el.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
				}
			}
			var children = null;
			if(null != children) {
				var _g21 = 0;
				while(_g21 < children.length) {
					var child = children[_g21];
					++_g21;
					el.appendChild(child);
				}
			}
			var textContent = opts.suggestionToString(t11);
			if(null != textContent) {
				el.appendChild(doc.createTextNode(textContent));
			}
			return el;
		};
		var _010 = options;
		var t12;
		if(null == _010) {
			t12 = null;
		} else {
			var _110 = _010.filterFn;
			if(null == _110) {
				t12 = null;
			} else {
				t12 = _110;
			}
		}
		var tmp2;
		if(t12 != null) {
			tmp2 = t12;
		} else {
			var a11 = opts.suggestionToString;
			tmp2 = function(a21,a31) {
				return fancy_search_Suggestions.defaultFilterer(a11,a21,a31);
			};
		}
		opts.filterFn = tmp2;
		return opts;
	}
	,createSuggestionItem: function(label,key) {
		var _gthis = this;
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("li");
		var _g1 = 0;
		var _g2 = [];
		while(_g1 < _g2.length) {
			var o = _g2[_g1];
			++_g1;
			el.setAttribute(o.name,o.value);
		}
		var _g11 = new haxe_ds_StringMap();
		var value = this.classes.suggestionItem;
		if(__map_reserved["class"] != null) {
			_g11.setReserved("class",value);
		} else {
			_g11.h["class"] = value;
		}
		var attrs = _g11;
		if(null != attrs) {
			var tmp = attrs.keys();
			while(tmp.hasNext()) {
				var attr = tmp.next();
				el.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
			}
		}
		var children = [label];
		if(null != children) {
			var _g21 = 0;
			while(_g21 < children.length) {
				var child = children[_g21];
				++_g21;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		var dom = el;
		dom.addEventListener("mouseover",function(_) {
			_gthis.selectItem(key);
		});
		dom.addEventListener("mousedown",function(_1) {
			_gthis.chooseSelectedItem();
		});
		dom.addEventListener("mouseout",function(_2) {
			_gthis.selectItem();
		});
		return dom;
	}
	,createSuggestionItemString: function(label,key) {
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("span");
		var _g1 = 0;
		var _g2 = [];
		while(_g1 < _g2.length) {
			var o = _g2[_g1];
			++_g1;
			el.setAttribute(o.name,o.value);
		}
		var _g11 = new haxe_ds_StringMap();
		var value = this.classes.suggestionHighlight;
		if(__map_reserved["class"] != null) {
			_g11.setReserved("class",value);
		} else {
			_g11.h["class"] = value;
		}
		var attrs = _g11;
		if(null != attrs) {
			var tmp = attrs.keys();
			while(tmp.hasNext()) {
				var attr = tmp.next();
				el.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
			}
		}
		var children = null;
		if(null != children) {
			var _g21 = 0;
			while(_g21 < children.length) {
				var child = children[_g21];
				++_g21;
				el.appendChild(child);
			}
		}
		var textContent = label;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		return this.createSuggestionItem(el,key);
	}
	,getLiteralItemIndex: function() {
		if(this.opts.searchLiteralPosition == fancy_search_util_LiteralPosition.Last) {
			return this.elements.length - 1;
		} else {
			return 0;
		}
	}
	,shouldCreateLiteral: function(literal) {
		if(this.opts.showSearchLiteralItem) {
			return this.opts.suggestions.map(this.opts.suggestionToString).map(function(_) {
				return _.toLowerCase();
			}).indexOf(literal.toLowerCase()) < 0;
		} else {
			return false;
		}
	}
	,createLiteralItem: function(label,replaceExisting) {
		if(replaceExisting == null) {
			replaceExisting = true;
		}
		if(!this.shouldCreateLiteral(this.genKeyForLiteral(label))) {
			return;
		}
		var literalPosition = this.getLiteralItemIndex();
		var el = this.createSuggestionItemString(this.opts.searchLiteralPrefix + label,this.genKeyForLiteral(label));
		if(replaceExisting) {
			this.elements.removeAt(literalPosition);
		}
		this.elements.insert(literalPosition,this.genKeyForLiteral(label),el);
	}
	,setSuggestions: function(items) {
		var _gthis = this;
		this.opts.suggestions = thx_Arrays.distinct(items);
		var inst = new thx_StringOrderedMap();
		this.elements = thx_Arrays.reduce(this.opts.suggestions,function(acc,curr) {
			var node = _gthis.opts.suggestionToElement(curr);
			var key = _gthis.genKey(curr);
			acc.set(key,_gthis.createSuggestionItem(node,key));
			return acc;
		},inst);
		this.createLiteralItem(StringTools.trim(this.opts.searchLiteralValue(this.searchInput)),false);
		if(this.isOpen) {
			this.filter(this.searchInput.value);
		}
	}
	,filter: function(search) {
		var _gthis = this;
		search = search.toLowerCase();
		var f = this.opts.filterFn;
		var a1 = search;
		var temp = this.opts.suggestions.filter(function(a2) {
			return f(a1,a2);
		});
		if(null != this.opts.sortSuggestionsFn) {
			var f1 = this.opts.sortSuggestionsFn;
			var a11 = search;
			temp = thx_Arrays.order(temp,function(a21,a3) {
				return f1(a11,a21,a3);
			});
		}
		var tmp = temp.slice(0,this.opts.limit);
		var inst = new thx_StringOrderedMap();
		this.filtered = thx_Arrays.reduce(tmp,function(acc,curr) {
			acc.set(_gthis.genKey(curr),curr);
			return acc;
		},inst);
		var tmp1 = this.filtered.keys();
		var tmp2 = dots_Dom.empty(this.list);
		thx_Iterators.reducei(tmp1,function(list,key,index) {
			return dots_Dom.append(list,_gthis.highlight(_gthis.dehighlight(_gthis.elements.get(key)),search));
		},tmp2);
		var literalValue = StringTools.trim(this.opts.searchLiteralValue(this.searchInput));
		var createLiteral = this.shouldCreateLiteral(literalValue);
		if(!thx_Strings.isEmpty(search) && createLiteral) {
			this.createLiteralItem(literalValue);
			var literalElement = this.elements.get(this.genKeyForLiteral(literalValue));
			this.filtered.insert(this.getLiteralItemIndex(),literalValue,null);
			dots_Dom.insertAtIndex(this.list,literalElement,this.getLiteralItemIndex());
		}
		if(!this.filtered.exists(this.selected)) {
			if(createLiteral) {
				this.selectItem(literalValue);
			} else if(this.opts.alwaysSelected) {
				this.selectItem(this.filtered.keyAt(0));
			} else {
				this.selectItem();
			}
		}
		if(this.filtered.length == 0) {
			this.el.classList.add(this.classes.suggestionsEmpty);
		} else {
			this.el.classList.remove(this.classes.suggestionsEmpty);
		}
	}
	,open: function() {
		this.isOpen = true;
		var el = this.el;
		el.classList.remove(this.classes.suggestionsClosed);
		el.classList.add(this.classes.suggestionsOpen);
	}
	,close: function() {
		this.isOpen = false;
		this.selectItem();
		var el = this.el;
		el.classList.remove(this.classes.suggestionsOpen);
		el.classList.add(this.classes.suggestionsClosed);
	}
	,selectItem: function(key) {
		var _gthis = this;
		var _e = this.elements.iterator();
		(function(f) {
			return thx_Iterators.map(_e,f);
		})(function(_) {
			_.classList.remove(_gthis.classes.suggestionItemSelected);
			return _;
		});
		this.selected = key;
		if(!thx_Strings.isEmpty(this.selected) && this.elements.exists(this.selected)) {
			this.elements.get(this.selected).classList.add(this.classes.suggestionItemSelected);
		}
	}
	,moveSelectionUp: function() {
		var currentIndex = thx_Iterators.toArray(this.filtered.keys()).indexOf(this.selected);
		this.selectItem(this.filtered.keyAt(currentIndex > 0?currentIndex - 1:this.filtered.length - 1));
	}
	,moveSelectionDown: function() {
		var currentIndex = thx_Iterators.toArray(this.filtered.keys()).indexOf(this.selected);
		this.selectItem(this.filtered.keyAt(currentIndex + 1 == this.filtered.length?0:currentIndex + 1));
	}
	,chooseSelectedItem: function() {
		var value = this.filtered.get(this.selected);
		this.opts.onChooseSelection(this.searchInput,null == value?haxe_ds_Option.None:haxe_ds_Option.Some(value));
	}
	,highlight: function(dom,search) {
		if(thx_Strings.isEmpty(search)) {
			return dom;
		}
		var elements = dom.querySelectorAll("." + this.classes.suggestionHighlight.split(" ").join("."));
		var pattern = new EReg("(" + search.split(" ").filter(function(v) {
			return v != "";
		}).map(thx_ERegs.escape).join("|") + ")","i");
		var _g = 0;
		while(_g < elements.length) {
			var el = elements[_g];
			++_g;
			this.highlightElement(el,pattern);
		}
		return dom;
	}
	,highlightElement: function(dom,pattern) {
		var _gthis = this;
		dots_Dom.traverseTextNodes(dom,function(node) {
			var text = node.textContent;
			var fragment = window.document.createDocumentFragment();
			while(pattern.match(text)) {
				var left = pattern.matchedLeft();
				if(left != "" && left != null) {
					fragment.appendChild(window.document.createTextNode(left));
				}
				var doc = null;
				if(null == doc) {
					doc = window.document;
				}
				var el = doc.createElement("strong");
				var _g1 = 0;
				var _g2 = [];
				while(_g1 < _g2.length) {
					var o = _g2[_g1];
					++_g1;
					el.setAttribute(o.name,o.value);
				}
				var _g11 = new haxe_ds_StringMap();
				var value = _gthis.classes.suggestionHighlighted;
				if(__map_reserved["class"] != null) {
					_g11.setReserved("class",value);
				} else {
					_g11.h["class"] = value;
				}
				var attrs = _g11;
				if(null != attrs) {
					var tmp = attrs.keys();
					while(tmp.hasNext()) {
						var attr = tmp.next();
						el.setAttribute(attr,__map_reserved[attr] != null?attrs.getReserved(attr):attrs.h[attr]);
					}
				}
				var children = null;
				if(null != children) {
					var _g21 = 0;
					while(_g21 < children.length) {
						var child = children[_g21];
						++_g21;
						el.appendChild(child);
					}
				}
				var textContent = pattern.matched(1);
				if(null != textContent) {
					el.appendChild(doc.createTextNode(textContent));
				}
				fragment.appendChild(el);
				text = pattern.matchedRight();
			}
			fragment.appendChild(window.document.createTextNode(text));
			node.parentNode.replaceChild(fragment,node);
		});
		dots_Dom.flattenTextNodes(dom);
		return dom;
	}
	,dehighlight: function(dom) {
		var els = dom.querySelectorAll("strong." + this.classes.suggestionHighlighted.split(" ").join("."));
		var _g = 0;
		while(_g < els.length) {
			var el = els[_g];
			++_g;
			if(el.childNodes.length == 0) {
				el.parentNode.removeChild(el);
			} else if(el.childNodes.length == 1) {
				el.parentNode.replaceChild(el.childNodes[0],el);
			} else {
				var fragment = window.document.createDocumentFragment();
				var _g1 = 0;
				var _g2 = el.childNodes;
				while(_g1 < _g2.length) {
					var child = _g2[_g1];
					++_g1;
					fragment.appendChild(child);
				}
				el.parentNode.replaceChild(fragment,el);
			}
		}
		dots_Dom.flattenTextNodes(dom);
		return dom;
	}
	,genKey: function(v) {
		return JSON.stringify(v);
	}
	,genKeyForLiteral: function(label) {
		return ":" + label;
	}
	,__class__: fancy_search_Suggestions
};
var fancy_search_util_LiteralPosition = { __ename__ : true, __constructs__ : ["First","Last"] };
fancy_search_util_LiteralPosition.First = ["First",0];
fancy_search_util_LiteralPosition.First.toString = $estr;
fancy_search_util_LiteralPosition.First.__enum__ = fancy_search_util_LiteralPosition;
fancy_search_util_LiteralPosition.Last = ["Last",1];
fancy_search_util_LiteralPosition.Last.toString = $estr;
fancy_search_util_LiteralPosition.Last.__enum__ = fancy_search_util_LiteralPosition;
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = true;
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null?"null":"" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null?"null":"" + file;
		b.b += " line ";
		b.b += line == null?"null":"" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null?"null":"" + cname;
		b.b += ".";
		b.b += meth == null?"null":"" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null?"null":"" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class?o.__name__ != null:false) {
			return true;
		}
		if(cl == Enum?o.__ename__ != null:false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = true;
thx_Arrays.any = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) if(predicate(arr[_g1++])) {
		return true;
	}
	return false;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) if(eq(array[_g1++],element)) {
			return true;
		}
		return false;
	}
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var v = [tmp.next()];
		if(!thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v))) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.reduce = function(array,f,initial) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) initial = f(initial,tmp.next());
	return initial;
};
var thx_ERegs = function() { };
thx_ERegs.__name__ = true;
thx_ERegs.escape = function(text) {
	return thx_ERegs.ESCAPE_PATTERN.map(text,function(ereg) {
		return "\\" + ereg.matched(1);
	});
};
var thx_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = true;
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Functions = function() { };
thx_Functions.__name__ = true;
thx_Functions.equality = function(a,b) {
	return a == b;
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = true;
thx_Iterators.map = function(it,f) {
	var acc = [];
	while(it.hasNext()) acc.push(f(it.next()));
	return acc;
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	while(it.hasNext()) acc.push(f(it.next(),i++));
	return acc;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	while(it.hasNext()) elements.push(it.next());
	return elements;
};
var thx_Options = function() { };
thx_Options.__name__ = true;
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 0:
		return haxe_ds_Option.Some(callback(option[2]));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.getOrThrow = function(option,posInfo) {
	switch(option[1]) {
	case 0:
		return option[2];
	case 1:
		throw new thx_Error("Could not extract value from option",null,posInfo);
		break;
	}
};
var thx_OrderedMapImpl = function(map) {
	this.map = map;
	this.arr = [];
	this.length = 0;
};
thx_OrderedMapImpl.__name__ = true;
thx_OrderedMapImpl.__interfaces__ = [haxe_IMap];
thx_OrderedMapImpl.prototype = {
	get: function(k) {
		return this.map.get(k);
	}
	,keyAt: function(index) {
		return this.arr[index];
	}
	,set: function(k,v) {
		if(!this.map.exists(k)) {
			this.arr.push(k);
			this.length++;
		}
		this.map.set(k,v);
	}
	,insert: function(index,k,v) {
		this.remove(k);
		this.arr.splice(index,0,k);
		this.map.set(k,v);
		this.length++;
	}
	,exists: function(k) {
		return this.map.exists(k);
	}
	,remove: function(k) {
		if(!this.map.exists(k)) {
			return false;
		}
		this.map.remove(k);
		HxOverrides.remove(this.arr,k);
		this.length--;
		return true;
	}
	,removeAt: function(index) {
		var key = this.arr[index];
		if(key == null) {
			return false;
		}
		this.map.remove(key);
		HxOverrides.remove(this.arr,key);
		this.length--;
		return true;
	}
	,keys: function() {
		return HxOverrides.iter(this.arr);
	}
	,iterator: function() {
		return HxOverrides.iter(this.toArray());
	}
	,toArray: function() {
		var values = [];
		var _g = 0;
		var _g1 = this.arr;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			values.push(this.map.get(k));
		}
		return values;
	}
	,__class__: thx_OrderedMapImpl
};
var thx_StringOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_StringMap());
};
thx_StringOrderedMap.__name__ = true;
thx_StringOrderedMap.__super__ = thx_OrderedMapImpl;
thx_StringOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	__class__: thx_StringOrderedMap
});
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = true;
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
var thx_Strings = function() { };
thx_Strings.__name__ = true;
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = true;
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_ErrorWrapper
});
var thx_promise_Future = function() {
	this.handlers = [];
	this.state = haxe_ds_Option.None;
};
thx_promise_Future.__name__ = true;
thx_promise_Future.create = function(handler) {
	var future = new thx_promise_Future();
	handler($bind(future,future.setState));
	return future;
};
thx_promise_Future.prototype = {
	then: function(handler) {
		this.handlers.push(handler);
		this.update();
		return this;
	}
	,setState: function(newstate) {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			throw new thx_Error("future was already \"" + Std.string(_g[2]) + "\", can't apply the new state \"" + Std.string(newstate) + "\"",null,{ fileName : "Future.hx", lineNumber : 121, className : "thx.promise.Future", methodName : "setState"});
			break;
		case 1:
			this.state = haxe_ds_Option.Some(newstate);
			break;
		}
		this.update();
		return this;
	}
	,update: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var result = _g[2];
			var index = -1;
			while(++index < this.handlers.length) this.handlers[index](result);
			this.handlers = [];
			break;
		case 1:
			break;
		}
	}
	,__class__: thx_promise_Future
};
var thx_promise__$Promise_Promise_$Impl_$ = {};
thx_promise__$Promise_Promise_$Impl_$.__name__ = true;
thx_promise__$Promise_Promise_$Impl_$.createUnsafe = function(callback) {
	return thx_promise_Future.create(function(cb) {
		callback(function(v) {
			cb(thx_Either.Right(v));
		},function(e) {
			cb(thx_Either.Left(e));
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.always = function(this1,handler) {
	return thx_promise_Future.create(function(cb) {
		this1.then(function(v) {
			try {
				handler();
				cb(v);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				cb(thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 124, className : "thx.promise._Promise.Promise_Impl_", methodName : "always"})));
			}
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.either = function(this1,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.createUnsafe(function(resolve,reject) {
		this1.then(function(r) {
			try {
				switch(r[1]) {
				case 0:
					var e = r[2];
					failure(e);
					reject(e);
					break;
				case 1:
					var v = r[2];
					success(v);
					resolve(v);
					break;
				}
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
				reject(thx_Error.fromDynamic(e1,{ fileName : "Promise.hx", lineNumber : 143, className : "thx.promise._Promise.Promise_Impl_", methodName : "either"}));
			}
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.success = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,success,function(_) {
	});
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
js_Boot.__toStr = { }.toString;
thx_ERegs.ESCAPE_PATTERN = new EReg("([-\\[\\]{}()*+?\\.,\\\\^$|# \t\r\n])","g");
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
