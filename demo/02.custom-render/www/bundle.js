// Generated by Haxe
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	fancy_Search.createFromSelector(".fancy-container input",{ minLength : 0, suggestionOptions : { suggestions : ["Amazon","Angellist","Apple","Facebook","Foursquare","Github","Google","Linkedin","Twitter","Vimeo"], limit : 6, showSearchLiteralItem : true, suggestionToElement : function(v) {
		haxe_Log.trace("SUGGESTION ",{ fileName : "Main.hx", lineNumber : 24, className : "Main", methodName : "main", customParams : [v]});
		return dots_Dom.create("i.fa.fa-" + v.toLowerCase());
	}}});
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var dots_AttributeType = { __ename__ : true, __constructs__ : ["BooleanAttribute","Property","BooleanProperty","OverloadedBooleanAttribute","NumericAttribute","PositiveNumericAttribute","SideEffectProperty"] };
dots_AttributeType.BooleanAttribute = ["BooleanAttribute",0];
dots_AttributeType.BooleanAttribute.toString = $estr;
dots_AttributeType.BooleanAttribute.__enum__ = dots_AttributeType;
dots_AttributeType.Property = ["Property",1];
dots_AttributeType.Property.toString = $estr;
dots_AttributeType.Property.__enum__ = dots_AttributeType;
dots_AttributeType.BooleanProperty = ["BooleanProperty",2];
dots_AttributeType.BooleanProperty.toString = $estr;
dots_AttributeType.BooleanProperty.__enum__ = dots_AttributeType;
dots_AttributeType.OverloadedBooleanAttribute = ["OverloadedBooleanAttribute",3];
dots_AttributeType.OverloadedBooleanAttribute.toString = $estr;
dots_AttributeType.OverloadedBooleanAttribute.__enum__ = dots_AttributeType;
dots_AttributeType.NumericAttribute = ["NumericAttribute",4];
dots_AttributeType.NumericAttribute.toString = $estr;
dots_AttributeType.NumericAttribute.__enum__ = dots_AttributeType;
dots_AttributeType.PositiveNumericAttribute = ["PositiveNumericAttribute",5];
dots_AttributeType.PositiveNumericAttribute.toString = $estr;
dots_AttributeType.PositiveNumericAttribute.__enum__ = dots_AttributeType;
dots_AttributeType.SideEffectProperty = ["SideEffectProperty",6];
dots_AttributeType.SideEffectProperty.toString = $estr;
dots_AttributeType.SideEffectProperty.__enum__ = dots_AttributeType;
var dots_Attributes = function() { };
dots_Attributes.__name__ = true;
dots_Attributes.setStringAttribute = function(el,name,value) {
	var _this = dots_Attributes.properties;
	var prop = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
	if(null == value) {
		if(name == "value") {
			el.setAttribute(name,"");
		} else {
			el.removeAttribute(name);
		}
	} else if(prop == null) {
		el.setAttribute(name,value);
	} else {
		switch(prop[1]) {
		case 0:case 3:case 4:case 5:
			el.setAttribute(name,value);
			break;
		case 1:case 2:case 6:
			el[name] = value;
			break;
		}
	}
};
var dots_Dom = function() { };
dots_Dom.__name__ = true;
dots_Dom.toString = function(node) {
	if(node.nodeType == 1) {
		return node.outerHTML;
	} else if(node.nodeType == 8) {
		return "<!--" + node.textContent + "-->";
	} else if(node.nodeType == 3) {
		return node.textContent;
	} else {
		throw new thx_Error("invalid nodeType " + node.nodeType,null,{ fileName : "Dom.hx", lineNumber : 58, className : "dots.Dom", methodName : "toString"});
	}
};
dots_Dom.nodeText = function(node) {
	if(node.nodeType == 1) {
		return node.innerHTML;
	} else if(node.nodeType == 8) {
		return node.textContent;
	} else if(node.nodeType == 3) {
		return node.textContent;
	} else {
		throw new thx_Error("invalid nodeType " + node.nodeType,null,{ fileName : "Dom.hx", lineNumber : 69, className : "dots.Dom", methodName : "nodeText"});
	}
};
dots_Dom.create = function(name,attrs,children,textContent,doc) {
	var node = dots_SelectorParser.parseSelector(name,attrs);
	if(null == doc) {
		doc = window.document;
	}
	var el = doc.createElement(node.tag);
	var tmp = node.attributes.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		var _this = node.attributes;
		dots_Attributes.setStringAttribute(el,key,__map_reserved[key] != null?_this.getReserved(key):_this.h[key]);
	}
	if(null != children) {
		var _g = 0;
		while(_g < children.length) {
			var child = children[_g];
			++_g;
			el.appendChild(child);
		}
	}
	if(null != textContent) {
		el.appendChild(doc.createTextNode(textContent));
	}
	return el;
};
dots_Dom.insertAtIndex = function(el,child,index) {
	el.insertBefore(child,el.children[index]);
	return el;
};
dots_Dom.appendChild = function(el,child) {
	el.appendChild(child);
	return el;
};
dots_Dom.appendChildren = function(el,children) {
	return children.reduce(dots_Dom.appendChild,el);
};
dots_Dom.append = function(el,child,children) {
	if(child != null) {
		dots_Dom.appendChild(el,child);
	}
	return dots_Dom.appendChildren(el,children != null?children:[]);
};
dots_Dom.empty = function(el) {
	while(el.firstChild != null) el.removeChild(el.firstChild);
	return el;
};
var dots_SelectorParser = function(selector) {
	this.selector = selector;
	this.index = 0;
};
dots_SelectorParser.__name__ = true;
dots_SelectorParser.parseSelector = function(selector,otherAttributes) {
	var result = new dots_SelectorParser(selector).parse();
	if(otherAttributes != null) {
		result.attributes = dots_SelectorParser.mergeAttributes(result.attributes,otherAttributes);
	}
	return result;
};
dots_SelectorParser.mergeAttributes = function(dest,other) {
	return thx_Iterators.reduce(other.keys(),function(acc,key) {
		var value = __map_reserved[key] != null?other.getReserved(key):other.h[key];
		if(key == "class" && (__map_reserved[key] != null?acc.existsReserved(key):acc.h.hasOwnProperty(key))) {
			value = "" + (__map_reserved[key] != null?acc.getReserved(key):acc.h[key]).toString() + " " + value.toString();
		}
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},dest);
};
dots_SelectorParser.prototype = {
	parse: function() {
		return { tag : this.gobbleTag(), attributes : this.gobbleAttributes()};
	}
	,gobbleTag: function() {
		if(this.isIdentifierStart()) {
			return this.gobbleIdentifier();
		} else {
			return "div";
		}
	}
	,gobbleAttributes: function() {
		var attributes = new haxe_ds_StringMap();
		while(this.index < this.selector.length) {
			var attribute = this.gobbleAttribute();
			if(attribute.key == "class" && (__map_reserved["class"] != null?attributes.existsReserved("class"):attributes.h.hasOwnProperty("class"))) {
				attribute.value = "" + (__map_reserved["class"] != null?attributes.getReserved("class"):attributes.h["class"]).toString() + " " + attribute.value.toString();
			}
			var key = attribute.key;
			var value = attribute.value;
			if(__map_reserved[key] != null) {
				attributes.setReserved(key,value);
			} else {
				attributes.h[key] = value;
			}
		}
		return attributes;
	}
	,gobbleAttribute: function() {
		var _g = this["char"]();
		switch(_g) {
		case "#":
			return this.gobbleElementId();
		case ".":
			return this.gobbleElementClass();
		case "[":
			return this.gobbleElementAttribute();
		default:
			throw new thx_Error("unknown selector char \"" + _g + "\" at pos " + this.index,null,{ fileName : "SelectorParser.hx", lineNumber : 79, className : "dots.SelectorParser", methodName : "gobbleAttribute"});
		}
	}
	,gobbleElementId: function() {
		this.gobbleChar("#");
		return { key : "id", value : this.gobbleIdentifier()};
	}
	,gobbleElementClass: function() {
		this.gobbleChar(".");
		return { key : "class", value : this.gobbleIdentifier()};
	}
	,gobbleElementAttribute: function() {
		this.gobbleChar("[");
		var key = this.gobbleIdentifier();
		this.gobbleChar("=");
		var value = this.gobbleUpTo("]");
		if(thx_Bools.canParse(value.toString())) {
			if(thx_Bools.parse(value.toString())) {
				value = key;
			} else {
				value = null;
			}
		}
		this.gobbleChar("]");
		return { key : key, value : value};
	}
	,gobbleIdentifier: function() {
		var result = [];
		result.push(this.gobbleChar());
		while(this.isIdentifierPart()) result.push(this.gobbleChar());
		return result.join("");
	}
	,gobbleChar: function(expecting,expectingAnyOf) {
		var c = this.selector.charAt(this.index++);
		if(expecting != null && expecting != c) {
			throw new thx_Error("expecting " + expecting + " at position " + this.index + " of " + this.selector,null,{ fileName : "SelectorParser.hx", lineNumber : 122, className : "dots.SelectorParser", methodName : "gobbleChar"});
		}
		if(expectingAnyOf != null && !thx_Arrays.contains(expectingAnyOf,c)) {
			throw new thx_Error("expecting one of " + expectingAnyOf.join(", ") + " at position " + this.index + " of " + this.selector,null,{ fileName : "SelectorParser.hx", lineNumber : 125, className : "dots.SelectorParser", methodName : "gobbleChar"});
		}
		return c;
	}
	,gobbleUpTo: function(stopChar) {
		var result = [];
		while(this["char"]() != stopChar) result.push(this.gobbleChar());
		return result.join("");
	}
	,isAlpha: function() {
		var c = this.code();
		if(!(c >= 65 && c <= 90)) {
			if(c >= 97) {
				return c <= 122;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,isNumeric: function() {
		var c = this.code();
		if(c >= 48) {
			return c <= 57;
		} else {
			return false;
		}
	}
	,isAny: function(cs) {
		var _g = 0;
		while(_g < cs.length) {
			var c = cs[_g];
			++_g;
			if(c == this["char"]()) {
				return true;
			}
		}
		return false;
	}
	,isIdentifierStart: function() {
		return this.isAlpha();
	}
	,isIdentifierPart: function() {
		if(!(this.isAlpha() || this.isNumeric())) {
			return this.isAny(["_","-"]);
		} else {
			return true;
		}
	}
	,'char': function() {
		return this.selector.charAt(this.index);
	}
	,code: function() {
		return HxOverrides.cca(this.selector,this.index);
	}
	,__class__: dots_SelectorParser
};
var fancy_Search = function(el,options) {
	this.input = el;
	this.opts = this.createDefaultOptions(options);
	this.opts.classes = this.createDefaultClasses(this.opts.classes);
	if(this.opts.suggestionOptions.input == null) {
		this.opts.suggestionOptions.input = this.input;
	}
	if(this.opts.suggestionOptions.parent == null) {
		this.opts.suggestionOptions.parent = this.opts.container;
	}
	this.opts.keys = thx_Objects.combine({ closeMenu : [27], selectionUp : [38], selectionDown : [40,9], selectionChoose : [13]},this.opts.keys);
	this.clearBtn = dots_Dom.create("button." + this.opts.classes.clearButton,null,null,"×");
	this.clearBtn.addEventListener("mousedown",this.opts.onClearButtonClick);
	if(this.opts.clearBtn) {
		dots_Dom.append(this.opts.container,this.clearBtn);
	}
	this.list = new fancy_search_Suggestions(this.opts.suggestionOptions,this.opts.classes);
	var el1 = this.input;
	el1.classList.add(this.opts.classes.input);
	if(this.input.value.length < 1) {
		var el2 = this.input;
		el2.classList.add(this.opts.classes.inputEmpty);
	}
	var el3 = this.input;
	el3.addEventListener("focus",$bind(this,this.onSearchFocus));
	var el4 = this.input;
	el4.addEventListener("blur",$bind(this,this.onSearchBlur));
	var el5 = this.input;
	el5.addEventListener("input",$bind(this,this.onSearchInput));
	var el6 = this.input;
	el6.addEventListener("keydown",$bind(this,this.onSearchKeydown));
};
fancy_Search.__name__ = true;
fancy_Search.createFromSelector = function(selector,options) {
	return new fancy_Search(window.document.querySelector(selector),options);
};
fancy_Search.prototype = {
	createDefaultOptions: function(options) {
		return thx_Objects.combine({ classes : { }, keys : { }, minLength : 1, clearBtn : true, container : this.input.parentElement, onClearButtonClick : $bind(this,this.onClearButtonClick), suggestionOptions : { }},options == null?{ }:options);
	}
	,createDefaultClasses: function(classes) {
		return thx_Objects.combine({ input : "fs-search-input", inputEmpty : "fs-search-input-empty", inputLoading : "fs-search-input-loading", clearButton : "fs-clear-input-button", suggestionContainer : "fs-suggestion-container", suggestionsOpen : "fs-suggestion-container-open", suggestionsClosed : "fs-suggestion-container-closed", suggestionsEmpty : "fs-suggestion-container-empty", suggestionList : "fs-suggestion-list", suggestionItem : "fs-suggestion-item", suggestionItemSelected : "fs-suggestion-item-selected"},this.opts.classes);
	}
	,onSearchFocus: function(e) {
		this.filterUsingInputValue();
	}
	,onSearchBlur: function(e) {
		this.checkEmptyStatus();
		this.list.close();
	}
	,filterUsingInputValue: function() {
		this.list.filter(this.input.value);
		if(this.input.value.length >= this.opts.minLength) {
			this.list.open();
		} else {
			this.list.close();
		}
	}
	,checkEmptyStatus: function() {
		if(this.input.value.length > 0) {
			var el = this.input;
			el.classList.remove(this.opts.classes.inputEmpty);
		} else {
			var el1 = this.input;
			el1.classList.add(this.opts.classes.inputEmpty);
		}
	}
	,onSearchInput: function(e) {
		var _gthis = this;
		this.checkEmptyStatus();
		this.filterUsingInputValue();
		if(this.opts.populateSuggestions != null) {
			var el = this.input;
			el.classList.add(this.opts.classes.inputLoading);
			thx_promise__$Promise_Promise_$Impl_$.always(thx_promise__$Promise_Promise_$Impl_$.success(this.opts.populateSuggestions(this.input.value),($_=this.list,$bind($_,$_.setSuggestions))),function() {
				var el1 = _gthis.input;
				el1.classList.remove(_gthis.opts.classes.inputLoading);
			});
		}
	}
	,onSearchKeydown: function(e) {
		e.stopPropagation();
		var code = e.which != null?e.which:e.keyCode;
		if(thx_Arrays.contains(this.opts.keys.closeMenu,code)) {
			this.list.close();
		} else if(thx_Arrays.contains(this.opts.keys.selectionUp,code) && this.list.isOpen) {
			e.preventDefault();
			this.list.moveSelectionUp();
		} else if(thx_Arrays.contains(this.opts.keys.selectionDown,code) && this.list.isOpen) {
			e.preventDefault();
			this.list.moveSelectionDown();
		} else if(thx_Arrays.contains(this.opts.keys.selectionChoose,code) && !thx_Strings.isEmpty(this.list.selected)) {
			this.list.chooseSelectedItem();
		}
	}
	,onClearButtonClick: function(e) {
		e.preventDefault();
		this.input.value = "";
		this.filterUsingInputValue();
	}
	,__class__: fancy_Search
};
var fancy_search_Suggestions = function(options,classes) {
	if(options.parent == null || options.input == null) {
		throw new js__$Boot_HaxeError("Cannot create `Suggestions` without input or parent element");
	}
	this.classes = classes;
	this.opts = this.initializeOptions(options);
	this.isOpen = false;
	this.filtered = new thx_StringOrderedMap();
	this.list = dots_Dom.create("ul." + classes.suggestionList);
	this.el = dots_Dom.create("div." + classes.suggestionContainer + "." + classes.suggestionsClosed,null,[this.list]);
	dots_Dom.append(this.opts.parent,this.el);
	this.setSuggestions(this.opts.suggestions);
};
fancy_search_Suggestions.__name__ = true;
fancy_search_Suggestions.suggestionToString = function(toString,suggestion) {
	return toString(suggestion);
};
fancy_search_Suggestions.defaultChooseSelection = function(toString,input,selection) {
	switch(selection[1]) {
	case 0:
		input.value = fancy_search_Suggestions.suggestionToString(toString,selection[2]);
		break;
	case 1:
		input.value = input.value;
		break;
	}
	input.blur();
};
fancy_search_Suggestions.defaultFilterer = function(toString,search,sugg) {
	return fancy_search_Suggestions.suggestionToString(toString,sugg).toLowerCase().indexOf(search) >= 0;
};
fancy_search_Suggestions.defaultSortSuggestions = function(toString,search,suggA,suggB) {
	var a = fancy_search_Suggestions.suggestionToString(toString,suggA);
	var b = fancy_search_Suggestions.suggestionToString(toString,suggB);
	var posA = a.toLowerCase().indexOf(search);
	var posB = b.toLowerCase().indexOf(search);
	if(posA == posB) {
		if(a < b) {
			return -1;
		} else if(a > b) {
			return 1;
		} else {
			return 0;
		}
	} else {
		return posA - posB;
	}
};
fancy_search_Suggestions.defaultHighlightLetters = function(toString,search,item) {
	var str = toString(item).toLowerCase();
	if(str.indexOf(search) >= 0) {
		return [{ _0 : str.indexOf(search), _1 : search.length}];
	} else {
		return [{ _0 : 0, _1 : 0}];
	}
};
fancy_search_Suggestions.prototype = {
	initializeOptions: function(options) {
		var opts = { parent : options.parent, input : options.input};
		var _1;
		var t;
		if(null == options) {
			t = null;
		} else {
			_1 = options.filterFn;
			if(null == _1) {
				t = null;
			} else {
				t = _1;
			}
		}
		opts.filterFn = t != null?t:fancy_search_Suggestions.defaultFilterer;
		var _11;
		var t1;
		if(null == options) {
			t1 = null;
		} else {
			_11 = options.sortSuggestionsFn;
			if(null == _11) {
				t1 = null;
			} else {
				t1 = _11;
			}
		}
		opts.sortSuggestionsFn = t1 != null?t1:fancy_search_Suggestions.defaultSortSuggestions;
		var _12;
		var t2;
		if(null == options) {
			t2 = null;
		} else {
			_12 = options.highlightLettersFn;
			if(null == _12) {
				t2 = null;
			} else {
				t2 = _12;
			}
		}
		opts.highlightLettersFn = t2 != null?t2:fancy_search_Suggestions.defaultHighlightLetters;
		var _13;
		var t3;
		if(null == options) {
			t3 = null;
		} else {
			_13 = options.limit;
			if(null == _13) {
				t3 = null;
			} else {
				t3 = _13;
			}
		}
		opts.limit = t3 != null?t3:5;
		var _14;
		var t4;
		if(null == options) {
			t4 = null;
		} else {
			_14 = options.alwaysSelected;
			if(null == _14) {
				t4 = null;
			} else {
				t4 = _14;
			}
		}
		opts.alwaysSelected = t4 != null && t4;
		var _15;
		var t5;
		if(null == options) {
			t5 = null;
		} else {
			_15 = options.onChooseSelection;
			if(null == _15) {
				t5 = null;
			} else {
				t5 = _15;
			}
		}
		opts.onChooseSelection = t5 != null?t5:fancy_search_Suggestions.defaultChooseSelection;
		var _16;
		var t6;
		if(null == options) {
			t6 = null;
		} else {
			_16 = options.showSearchLiteralItem;
			if(null == _16) {
				t6 = null;
			} else {
				t6 = _16;
			}
		}
		opts.showSearchLiteralItem = t6 != null && t6;
		var _17;
		var t7;
		if(null == options) {
			t7 = null;
		} else {
			_17 = options.searchLiteralPosition;
			if(null == _17) {
				t7 = null;
			} else {
				t7 = _17;
			}
		}
		opts.searchLiteralPosition = t7 != null?t7:fancy_search_util_LiteralPosition.First;
		var _18;
		var t8;
		if(null == options) {
			t8 = null;
		} else {
			_18 = options.searchLiteralValue;
			if(null == _18) {
				t8 = null;
			} else {
				t8 = _18;
			}
		}
		opts.searchLiteralValue = t8 != null?t8:function(inpt) {
			return inpt.value;
		};
		var _19;
		var t9;
		if(null == options) {
			t9 = null;
		} else {
			_19 = options.searchLiteralPrefix;
			if(null == _19) {
				t9 = null;
			} else {
				t9 = _19;
			}
		}
		opts.searchLiteralPrefix = t9 != null?t9:"Search for: ";
		var _110;
		var t10;
		if(null == options) {
			t10 = null;
		} else {
			_110 = options.suggestions;
			if(null == _110) {
				t10 = null;
			} else {
				t10 = _110;
			}
		}
		opts.suggestions = t10 != null?t10:[];
		var _111;
		var t11;
		if(null == options) {
			t11 = null;
		} else {
			_111 = options.suggestionToString;
			if(null == _111) {
				t11 = null;
			} else {
				t11 = _111;
			}
		}
		opts.suggestionToString = t11 != null?t11:function(t12) {
			return Std.string(t12);
		};
		var _112;
		var t13;
		if(null == options) {
			t13 = null;
		} else {
			_112 = options.suggestionToElement;
			if(null == _112) {
				t13 = null;
			} else {
				t13 = _112;
			}
		}
		opts.suggestionToElement = t13 != null?t13:function(t14) {
			return dots_Dom.create("span",null,null,Std.string(t14));
		};
		return opts;
	}
	,createSuggestionItem: function(label,value) {
		var _gthis = this;
		if(value == null) {
			value = dots_Dom.nodeText(label);
		}
		var el = dots_Dom.create("li." + this.classes.suggestionItem,null,[label]);
		var f = function() {
			_gthis.selectItem(value);
		};
		el.addEventListener("mouseover",function(e) {
			e.preventDefault();
			f();
		});
		var f1 = function() {
			_gthis.chooseSelectedItem();
		};
		el.addEventListener("mousedown",function(e1) {
			e1.preventDefault();
			f1();
		});
		var f2 = function() {
			_gthis.selectItem();
		};
		el.addEventListener("mouseout",function(e2) {
			e2.preventDefault();
			f2();
		});
		return el;
	}
	,createSuggestionItemString: function(label,value) {
		return this.createSuggestionItem(dots_Dom.create("span",null,null,label),value);
	}
	,getLiteralItemIndex: function() {
		if(this.opts.searchLiteralPosition == fancy_search_util_LiteralPosition.Last) {
			return this.elements.length - 1;
		} else {
			return 0;
		}
	}
	,shouldCreateLiteral: function(literal) {
		if(this.opts.showSearchLiteralItem) {
			var a1 = this.opts.suggestionToString;
			return this.opts.suggestions.map(function(a2) {
				return fancy_search_Suggestions.suggestionToString(a1,a2);
			}).map(function(_) {
				return _.toLowerCase();
			}).indexOf(literal.toLowerCase()) < 0;
		} else {
			return false;
		}
	}
	,createLiteralItem: function(label,replaceExisting) {
		if(replaceExisting == null) {
			replaceExisting = true;
		}
		if(!this.shouldCreateLiteral(label)) {
			return;
		}
		var literalPosition = this.getLiteralItemIndex();
		var el = this.createSuggestionItemString(this.opts.searchLiteralPrefix + label,label);
		if(replaceExisting) {
			this.elements.removeAt(literalPosition);
		}
		this.elements.insert(literalPosition,label,el);
	}
	,setSuggestions: function(items) {
		var _gthis = this;
		this.opts.suggestions = thx_Arrays.distinct(items);
		var inst = new thx_StringOrderedMap();
		this.elements = this.opts.suggestions.reduce(function(acc,curr) {
			var node = _gthis.opts.suggestionToElement(curr);
			var stringified = fancy_search_Suggestions.suggestionToString(_gthis.opts.suggestionToString,curr);
			haxe_Log.trace(dots_Dom.toString(node),{ fileName : "Suggestions.hx", lineNumber : 137, className : "fancy.search.Suggestions", methodName : "setSuggestions"});
			acc.set(stringified,_gthis.createSuggestionItem(node));
			return acc;
		},inst);
		this.createLiteralItem(StringTools.trim(this.opts.searchLiteralValue(this.opts.input)),false);
		if(this.isOpen) {
			this.filter(this.opts.input.value);
		}
	}
	,filter: function(search) {
		var _gthis = this;
		search = search.toLowerCase();
		var f = this.opts.filterFn;
		var a1 = this.opts.suggestionToString;
		var a2 = search;
		var tmp = this.opts.suggestions.filter(function(a3) {
			return f(a1,a2,a3);
		});
		var f1 = this.opts.sortSuggestionsFn;
		var a11 = this.opts.suggestionToString;
		var a21 = search;
		var array = thx_Arrays.order(tmp,function(a31,a4) {
			return f1(a11,a21,a31,a4);
		}).slice(0,this.opts.limit);
		var inst = new thx_StringOrderedMap();
		this.filtered = array.reduce(function(acc,curr) {
			acc.set(fancy_search_Suggestions.suggestionToString(_gthis.opts.suggestionToString,curr),curr);
			return acc;
		},inst);
		var array1 = this.filtered.tuples();
		var initial = dots_Dom.empty(this.list);
		array1.reduce(function(list,pair,index) {
			var key = pair._0;
			var _e = _gthis.opts.highlightLettersFn(_gthis.opts.suggestionToString,search,pair._1);
			var array2 = (function(sort) {
				return thx_Arrays.order(_e,sort);
			})(function(_0,_1) {
				return _0._1 - _1._1;
			});
			var initial1 = dots_Dom.empty(_gthis.elements.get(key));
			return dots_Dom.append(list,array2.reduce(function(acc1,range) {
				if(range._0 != 0) {
					dots_Dom.append(acc1,dots_Dom.create("span",null,null,HxOverrides.substr(key,0,range._0)));
				}
				if(range._1 > 0) {
					dots_Dom.append(acc1,dots_Dom.create("strong",null,null,HxOverrides.substr(key,range._0,range._1)));
				}
				if(range._0 + range._1 < key.length) {
					dots_Dom.append(acc1,dots_Dom.create("span",null,null,HxOverrides.substr(key,range._1 + range._0,null)));
				}
				return acc1;
			},initial1));
		},initial);
		var literalValue = StringTools.trim(this.opts.searchLiteralValue(this.opts.input));
		var createLiteral = this.shouldCreateLiteral(literalValue);
		if(!thx_Strings.isEmpty(search) && createLiteral) {
			this.createLiteralItem(literalValue);
			var literalElement = this.elements.get(literalValue);
			this.filtered.insert(this.getLiteralItemIndex(),literalValue,null);
			dots_Dom.insertAtIndex(this.list,literalElement,this.getLiteralItemIndex());
		}
		if(!this.filtered.exists(this.selected)) {
			if(createLiteral) {
				this.selectItem(literalValue);
			} else if(this.opts.alwaysSelected) {
				this.selectItem(this.filtered.keyAt(0));
			} else {
				this.selectItem();
			}
		}
		if(this.filtered.length == 0) {
			this.el.classList.add(this.classes.suggestionsEmpty);
		} else {
			this.el.classList.remove(this.classes.suggestionsEmpty);
		}
	}
	,open: function() {
		this.isOpen = true;
		var el = this.el;
		el.classList.remove(this.classes.suggestionsClosed);
		el.classList.add(this.classes.suggestionsOpen);
	}
	,close: function() {
		this.isOpen = false;
		this.selectItem();
		var el = this.el;
		el.classList.remove(this.classes.suggestionsOpen);
		el.classList.add(this.classes.suggestionsClosed);
	}
	,selectItem: function(key) {
		var _gthis = this;
		var _e = this.elements.iterator();
		(function(f) {
			return thx_Iterators.map(_e,f);
		})(function(_) {
			_.classList.remove(_gthis.classes.suggestionItemSelected);
			return _;
		});
		this.selected = key;
		if(!thx_Strings.isEmpty(this.selected) && this.elements.exists(this.selected)) {
			this.elements.get(this.selected).classList.add(this.classes.suggestionItemSelected);
		}
	}
	,moveSelectionUp: function() {
		var currentIndex = thx_Iterators.toArray(this.filtered.keys()).indexOf(this.selected);
		this.selectItem(this.filtered.keyAt(currentIndex > 0?currentIndex - 1:this.filtered.length - 1));
	}
	,moveSelectionDown: function() {
		var currentIndex = thx_Iterators.toArray(this.filtered.keys()).indexOf(this.selected);
		this.selectItem(this.filtered.keyAt(currentIndex + 1 == this.filtered.length?0:currentIndex + 1));
	}
	,chooseSelectedItem: function() {
		this.opts.onChooseSelection(this.opts.suggestionToString,this.opts.input,this.filtered.exists(this.selected) && this.filtered.get(this.selected) != null?haxe_ds_Option.Some(this.filtered.get(this.selected)):haxe_ds_Option.None);
	}
	,__class__: fancy_search_Suggestions
};
var fancy_search_util_LiteralPosition = { __ename__ : true, __constructs__ : ["First","Last"] };
fancy_search_util_LiteralPosition.First = ["First",0];
fancy_search_util_LiteralPosition.First.toString = $estr;
fancy_search_util_LiteralPosition.First.__enum__ = fancy_search_util_LiteralPosition;
fancy_search_util_LiteralPosition.Last = ["Last",1];
fancy_search_util_LiteralPosition.Last.toString = $estr;
fancy_search_util_LiteralPosition.Last.__enum__ = fancy_search_util_LiteralPosition;
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = true;
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null?"null":"" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null?"null":"" + file;
		b.b += " line ";
		b.b += line == null?"null":"" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null?"null":"" + cname;
		b.b += ".";
		b.b += meth == null?"null":"" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null?"null":"" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = true;
thx_Arrays.any = function(arr,predicate) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) if(predicate(tmp.next())) {
		return true;
	}
	return false;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) if(eq(array[_g1++],element)) {
			return true;
		}
		return false;
	}
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var v = [tmp.next()];
		if(!thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v))) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
var thx_Bools = function() { };
thx_Bools.__name__ = true;
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			throw new js__$Boot_HaxeError("unable to parse \"" + _g + "\"");
		}
	}
};
var thx_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = true;
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Functions = function() { };
thx_Functions.__name__ = true;
thx_Functions.equality = function(a,b) {
	return a == b;
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = true;
thx_Iterators.map = function(it,f) {
	var acc = [];
	while(it.hasNext()) acc.push(f(it.next()));
	return acc;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	while(it.hasNext()) elements.push(it.next());
	return elements;
};
var thx_Objects = function() { };
thx_Objects.__name__ = true;
thx_Objects.combine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g11 = Reflect.fields(second);
	while(_g2 < _g11.length) {
		var field1 = _g11[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
var thx_OrderedMapImpl = function(map) {
	this.map = map;
	this.arr = [];
	this.length = 0;
};
thx_OrderedMapImpl.__name__ = true;
thx_OrderedMapImpl.__interfaces__ = [haxe_IMap];
thx_OrderedMapImpl.prototype = {
	get: function(k) {
		return this.map.get(k);
	}
	,keyAt: function(index) {
		return this.arr[index];
	}
	,set: function(k,v) {
		if(!this.map.exists(k)) {
			this.arr.push(k);
			this.length++;
		}
		this.map.set(k,v);
	}
	,insert: function(index,k,v) {
		this.remove(k);
		this.arr.splice(index,0,k);
		this.map.set(k,v);
		this.length++;
	}
	,exists: function(k) {
		return this.map.exists(k);
	}
	,remove: function(k) {
		if(!this.map.exists(k)) {
			return false;
		}
		this.map.remove(k);
		HxOverrides.remove(this.arr,k);
		this.length--;
		return true;
	}
	,removeAt: function(index) {
		var key = this.arr[index];
		if(key == null) {
			return false;
		}
		this.map.remove(key);
		HxOverrides.remove(this.arr,key);
		this.length--;
		return true;
	}
	,keys: function() {
		return HxOverrides.iter(this.arr);
	}
	,iterator: function() {
		return HxOverrides.iter(this.toArray());
	}
	,tuples: function() {
		var _gthis = this;
		return this.arr.map(function(key) {
			return { _0 : key, _1 : _gthis.map.get(key)};
		});
	}
	,toArray: function() {
		var values = [];
		var _g = 0;
		var _g1 = this.arr;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			values.push(this.map.get(k));
		}
		return values;
	}
	,__class__: thx_OrderedMapImpl
};
var thx_StringOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_StringMap());
};
thx_StringOrderedMap.__name__ = true;
thx_StringOrderedMap.__super__ = thx_OrderedMapImpl;
thx_StringOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	__class__: thx_StringOrderedMap
});
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = true;
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
var thx_Strings = function() { };
thx_Strings.__name__ = true;
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = true;
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_ErrorWrapper
});
var thx_promise_Future = function() { };
thx_promise_Future.__name__ = true;
thx_promise_Future.prototype = {
	then: function(handler) {
		this.handlers.push(handler);
		this.update();
		return this;
	}
	,update: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var result = _g[2];
			var index = -1;
			while(++index < this.handlers.length) this.handlers[index](result);
			this.handlers = [];
			break;
		case 1:
			break;
		}
	}
	,__class__: thx_promise_Future
};
var thx_promise__$Promise_Promise_$Impl_$ = {};
thx_promise__$Promise_Promise_$Impl_$.__name__ = true;
thx_promise__$Promise_Promise_$Impl_$.always = function(this1,handler) {
	return this1.then(function(_) {
		handler();
	});
};
thx_promise__$Promise_Promise_$Impl_$.either = function(this1,success,failure) {
	return this1.then(function(r) {
		switch(r[1]) {
		case 0:
			var error = r[2];
			failure(error);
			break;
		case 1:
			var value = r[2];
			success(value);
			break;
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.success = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,success,function(_) {
	});
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}

      // Production steps of ECMA-262, Edition 5, 15.4.4.21
      // Reference: http://es5.github.io/#x15.4.4.21
      if (!Array.prototype.reduce) {
        Array.prototype.reduce = function(callback /*, initialValue*/) {
          'use strict';
          if (this == null) {
            throw new TypeError('Array.prototype.reduce called on null or undefined');
          }
          if (typeof callback !== 'function') {
            throw new TypeError(callback + ' is not a function');
          }
          var t = Object(this), len = t.length >>> 0, k = 0, value;
          if (arguments.length == 2) {
            value = arguments[1];
          } else {
            while (k < len && ! k in t) {
              k++;
            }
            if (k >= len) {
              throw new TypeError('Reduce of empty array with no initial value');
            }
            value = t[k++];
          }
          for (; k < len; k++) {
            if (k in t) {
              value = callback(value, t[k], k, t);
            }
          }
          return value;
        };
      }
    ;
dots_Attributes.properties = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.allowFullScreen != null) {
			_g.setReserved("allowFullScreen",value);
		} else {
			_g.h["allowFullScreen"] = value;
		}
	}
	{
		var value1 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.async != null) {
			_g.setReserved("async",value1);
		} else {
			_g.h["async"] = value1;
		}
	}
	{
		var value2 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.autoFocus != null) {
			_g.setReserved("autoFocus",value2);
		} else {
			_g.h["autoFocus"] = value2;
		}
	}
	{
		var value3 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.autoPlay != null) {
			_g.setReserved("autoPlay",value3);
		} else {
			_g.h["autoPlay"] = value3;
		}
	}
	{
		var value4 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.capture != null) {
			_g.setReserved("capture",value4);
		} else {
			_g.h["capture"] = value4;
		}
	}
	{
		var value5 = dots_AttributeType.BooleanProperty;
		if(__map_reserved.checked != null) {
			_g.setReserved("checked",value5);
		} else {
			_g.h["checked"] = value5;
		}
	}
	{
		var value6 = dots_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.cols != null) {
			_g.setReserved("cols",value6);
		} else {
			_g.h["cols"] = value6;
		}
	}
	{
		var value7 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.controls != null) {
			_g.setReserved("controls",value7);
		} else {
			_g.h["controls"] = value7;
		}
	}
	{
		var value8 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved["default"] != null) {
			_g.setReserved("default",value8);
		} else {
			_g.h["default"] = value8;
		}
	}
	{
		var value9 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.defer != null) {
			_g.setReserved("defer",value9);
		} else {
			_g.h["defer"] = value9;
		}
	}
	{
		var value10 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.disabled != null) {
			_g.setReserved("disabled",value10);
		} else {
			_g.h["disabled"] = value10;
		}
	}
	{
		var value11 = dots_AttributeType.OverloadedBooleanAttribute;
		if(__map_reserved.download != null) {
			_g.setReserved("download",value11);
		} else {
			_g.h["download"] = value11;
		}
	}
	{
		var value12 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.formNoValidate != null) {
			_g.setReserved("formNoValidate",value12);
		} else {
			_g.h["formNoValidate"] = value12;
		}
	}
	{
		var value13 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.hidden != null) {
			_g.setReserved("hidden",value13);
		} else {
			_g.h["hidden"] = value13;
		}
	}
	{
		var value14 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.loop != null) {
			_g.setReserved("loop",value14);
		} else {
			_g.h["loop"] = value14;
		}
	}
	{
		var value15 = dots_AttributeType.BooleanProperty;
		if(__map_reserved.multiple != null) {
			_g.setReserved("multiple",value15);
		} else {
			_g.h["multiple"] = value15;
		}
	}
	{
		var value16 = dots_AttributeType.BooleanProperty;
		if(__map_reserved.muted != null) {
			_g.setReserved("muted",value16);
		} else {
			_g.h["muted"] = value16;
		}
	}
	{
		var value17 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.noValidate != null) {
			_g.setReserved("noValidate",value17);
		} else {
			_g.h["noValidate"] = value17;
		}
	}
	{
		var value18 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.open != null) {
			_g.setReserved("open",value18);
		} else {
			_g.h["open"] = value18;
		}
	}
	{
		var value19 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.readOnly != null) {
			_g.setReserved("readOnly",value19);
		} else {
			_g.h["readOnly"] = value19;
		}
	}
	{
		var value20 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.required != null) {
			_g.setReserved("required",value20);
		} else {
			_g.h["required"] = value20;
		}
	}
	{
		var value21 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.reversed != null) {
			_g.setReserved("reversed",value21);
		} else {
			_g.h["reversed"] = value21;
		}
	}
	{
		var value22 = dots_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.rows != null) {
			_g.setReserved("rows",value22);
		} else {
			_g.h["rows"] = value22;
		}
	}
	{
		var value23 = dots_AttributeType.NumericAttribute;
		if(__map_reserved.rowSpan != null) {
			_g.setReserved("rowSpan",value23);
		} else {
			_g.h["rowSpan"] = value23;
		}
	}
	{
		var value24 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.scoped != null) {
			_g.setReserved("scoped",value24);
		} else {
			_g.h["scoped"] = value24;
		}
	}
	{
		var value25 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.seamless != null) {
			_g.setReserved("seamless",value25);
		} else {
			_g.h["seamless"] = value25;
		}
	}
	{
		var value26 = dots_AttributeType.BooleanProperty;
		if(__map_reserved.selected != null) {
			_g.setReserved("selected",value26);
		} else {
			_g.h["selected"] = value26;
		}
	}
	{
		var value27 = dots_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.size != null) {
			_g.setReserved("size",value27);
		} else {
			_g.h["size"] = value27;
		}
	}
	{
		var value28 = dots_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.span != null) {
			_g.setReserved("span",value28);
		} else {
			_g.h["span"] = value28;
		}
	}
	{
		var value29 = dots_AttributeType.NumericAttribute;
		if(__map_reserved.start != null) {
			_g.setReserved("start",value29);
		} else {
			_g.h["start"] = value29;
		}
	}
	{
		var value30 = dots_AttributeType.SideEffectProperty;
		if(__map_reserved.value != null) {
			_g.setReserved("value",value30);
		} else {
			_g.h["value"] = value30;
		}
	}
	{
		var value31 = dots_AttributeType.BooleanAttribute;
		if(__map_reserved.itemScope != null) {
			_g.setReserved("itemScope",value31);
		} else {
			_g.h["itemScope"] = value31;
		}
	}
	$r = _g;
	return $r;
}(this));
js_Boot.__toStr = { }.toString;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
